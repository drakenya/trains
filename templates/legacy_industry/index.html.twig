{% extends 'base.html.twig' %}

{% block title %}LegacyIndustry index{% endblock %}

{% block body %}
    <h1 xmlns:v-bind="http://www.w3.org/1999/xhtml">LegacyIndustry index</h1>

    <div id="legacy-industry-list">
        <section>
            <div>
                <b-field label="Search ...">
                    <b-input v-model="searchQuery.query"></b-input>
                </b-field>
            </div>
            <b-table
                :data="data"
                :loading="loading"

                paginated
                pagination-simple
                backend-pagination

                :total="total"
                :per-page="perPage"
                @page-change="onPageChange"

                backend-sorting
                :default-sort-direction="defaultSortOrder"
                :default-sort="[sortField, sortOrder]"
                @sort="onSort"
            >
                <template slot-scope="props">
                    <b-table-column field="era" label="Era" sortable>
                        {% verbatim %}{{ props.row.era }}{% endverbatim %}
                    </b-table-column>
                    <b-table-column field="name" label="Company" sortable>
                        {% verbatim %}{{ props.row.name }}{% endverbatim %}
                    </b-table-column>
                    <b-table-column field="city" label="Location" sortable>
                        {% verbatim %}{{ props.row.city }}, {{ props.row.state }}{% endverbatim %}
                    </b-table-column>
                    <b-table-column field="reportingMarks" label="Railroad" sortable>
                        {% verbatim %}{{ props.row.reportingMarks }}{% endverbatim %}
                    </b-table-column>
                    <b-table-column field="shipReceive" label="S/R" sortable>
                        {% verbatim %}{{ props.row.shipReceive }}{% endverbatim %}
                    </b-table-column>
                    <b-table-column field="commodity" label="Commodity" sortable filterable>
                        {% verbatim %}{{ props.row.commodity }}{% endverbatim %}
                    </b-table-column>
                    <b-table-column>
                        <span class="icon is-small">
                            <a v-bind:href="props.row.viewUrl"><i class="mdi mdi-file-find"></i></a>
                            {% if is_granted('ROLE_ADMIN') %}<a v-bind:href="props.row.editUrl"><i class="mdi mdi-pencil"></i></a>{% endif %}
                        </span>
                    </b-table-column>
                </template>
            </b-table>
        </section>
    </div>

    {% if is_granted('ROLE_ADMIN') %}<a href="{{ path('legacy_industry_new') }}"><i class="mdi mdi-plus mdi-48"></i> Add</a>{% endif %}
{% endblock %}

{% block stylesheets %}
    <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <script src="https://unpkg.com/buefy"></script>
    <script src="https://cdn.jsdelivr.net/npm/lodash@4.17.10/lodash.min.js"></script>
    <script>
        Vue.use(Buefy.default)
    </script>
{% endblock %}

{% block javascripts %}
    <script>
        const table = {
            data() {
                return {
                    data: [],
                    total: 0,
                    loading: false,
                    sortField: 'id',
                    sortOrder: 'asc',
                    defaultSortOrder: 'asc',
                    page: 1,
                    perPage: 100,
                    searchQuery: {
                        query: ''
                    }
                }
            },
            watch: {
                searchQuery: {
                    handler () {
                        this.loadAsyncData();
                    },
                    deep: true
                }
            },
            methods: {
                loadAsyncData: _.debounce(function() {
                    const params = [
                        'orderBy=' + this.sortField,
                        'sortOrder=' + this.sortOrder,
                        'page=' + this.page,
                        'limit=' + this.perPage,
                        'query=' + this.searchQuery.query
                    ].join('&');

                    this.loading = true
                    axios.get('/legacy-industry/api/list?' + params)
                        .then(({data}) => {
                            this.data = []
                            let currentTotal = data.count
                            this.total = currentTotal
                            data.data.forEach((item) => {
                                this.data.push(item)
                            })
                            this.loading = false;
                        })
                        .catch((error) => {
                            this.data = []
                            this.total = 0
                            this.loading = false
                            throw error
                        })
                }, 250),
                onFilter() {
                    this.loadAsyncData()
                },
                onPageChange(page) {
                    this.page = page
                    this.loadAsyncData()
                },
                onSort(field, order) {
                    this.sortField = field
                    this.sortOrder = order
                    this.loadAsyncData()
                }
            },
            filters: {
                truncate(value, length) {
                    return value.length > length
                        ? value.substr(0, length) + '...'
                        : value
                }
            },
            mounted() {
                this.loadAsyncData()
            }
        }

        const app = new Vue(table)
        app.$mount('#legacy-industry-list')
    </script>
{% endblock %}